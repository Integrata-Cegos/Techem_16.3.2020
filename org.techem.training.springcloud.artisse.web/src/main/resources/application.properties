server.port=9092




                     Model, Component, Service  --> logik
					 
					 
					 Load Balancer --> alles von aussen 
					 
					 
					 Orcestrierung --> 
						- Application Performance Management --> mehr als überwachung
						
					
					Config Server --> 
					
					
					Discovery   --> managt die abhängigkeiten zwischen den einzelnen services
					
					
###################################################################################################

cloud fähig wenn:
	1.Stateless ist notwendig
	2.kein application.properties sondern spring cloud config
	3.Service abhängigkeiten auflösen
		-spring boot context&dependency injection -->laufen in einem process
		-spring cloud läd/füllt dependencies aus dem discovery (proxy Obj)
	4.Resilienz der Aufrufe
		-failover verhalten
		-circut breaker
		
###################################################################################################
Versionnummer: Major.Minor.Patch(Quantifier)     in cloud wichtig da sachen automatisch ersetzt evtl auch mit höherem desselben major grad!


###################################################################################################



Sonatype
Sonatype Nexus Repository Manager